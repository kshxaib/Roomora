// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  PARTNER
  USER
}

enum BookingStatus {
  BOOKED
  CANCELLED
  COMPLETED
  PENDING
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  avatarUrl String?  @default("https://static.vecteezy.com/system/resources/previews/002/318/271/original/user-profile-icon-free-vector.jpg")

  hotels   Hotel[]   @relation("UserHotels")
  bookings Booking[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hotel {
  id          String   @id @default(uuid())
  ownerId     String
  owner       User     @relation("UserHotels", fields: [ownerId], references: [id])
  name        String
  description String
  city        String
  address     String
  price       Float
  rating      Float    @default(0)
  images      String[]
  amenities   String[]

  totalRooms     Int
  availableRooms Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
}

model Booking {
  id          String        @id @default(uuid())
  userId      String
  hotelId     String
  checkIn     DateTime
  checkOut    DateTime
  guests      Int
  totalAmount Float
  status      BookingStatus @default(PENDING)

  paymentId        String?
  paymentOrderId   String?
  paymentSignature String?
  isPaid           Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id])
  hotel Hotel @relation(fields: [hotelId], references: [id])
}
